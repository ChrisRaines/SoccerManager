{"ast":null,"code":"var _jsxFileName = \"/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const {\n    jogadores,\n    setJogadores\n  } = useContext(Context); // const [jogadoresFiltrados, setJogadoresFiltrados] = useState<Jogador[]>([])\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const jogadoresFiltrados = jogadores.filter(jogador => jogador.startsWith(searchTerm)); // function filtrar() {\n  //     try {\n  //         jogadores.filter((jogador) => {\n  //             if (searchTerm.length == 0) {\n  //                 return jogadores\n  //             } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n  //                 setJogadoresFiltrados(oldArray => ([...oldArray, jogador]));\n  //                 // setJogadoresFiltrados(JSON.parse(jogador))\n  //                 console.log(jogadoresFiltrados);\n  //                 // if (jogadoresFiltrados.length > 0) {\n  //                 //     setJogadores([])\n  //                 //     setJogadores(jogadoresFiltrados)\n  //                 //     console.log(\"jdf\", jogadores)\n  //                 // }\n  //             }\n  //         })\n  //     } catch (err) {\n  //         console.error(err);\n  //     }\n  // }\n\n  useEffect(() => {// filtrar();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(SearchBarStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [isModalVisible ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalVisible(false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        placeholder: \"Pesquisar Jogador\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        onClick: () => setIsModalVisible(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"NFgBVZLnNdPPEdCkazWKA081saE=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx"],"names":["React","useContext","useEffect","useState","SearchBarStyle","AddCircleIcon","Modal","Context","SearchBar","jogadores","setJogadores","searchTerm","setSearchTerm","isModalVisible","setIsModalVisible","jogadoresFiltrados","filter","jogador","startsWith","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BT,UAAU,CAACM,OAAD,CAA9C,CADiB,CAEjB;;AAEA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAU,KAAV,CAApD;AAGA,QAAMY,kBAAkB,GAAGN,SAAS,CAC/BO,MADsB,CACdC,OAAD,IAAaA,OAAO,CAACC,UAAR,CAAmBP,UAAnB,CADE,CAA3B,CATiB,CAajB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;AAEAT,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACS,UAAD,CAFM,CAAT;AAKA,sBACI,QAAC,cAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACKE,cAAc,gBAAG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAAvC;AAAgD,QAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkF,IADrG,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,KAAK,EAAEH,UADP;AAEA,QAAA,WAAW,EAAC,mBAFZ;AAGA,QAAA,QAAQ,EAAGQ,CAAD,IAAO;AAAEP,UAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA+B;AAHlD;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAMP,iBAAiB,CAAC,IAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA5DQN,S;;KAAAA,S;AA8DT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport Jogador from \"../../Interfaces/jogadorInterface\";\n\n\nfunction SearchBar() {\n    const { jogadores, setJogadores } = useContext(Context);\n    // const [jogadoresFiltrados, setJogadoresFiltrados] = useState<Jogador[]>([])\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n\n\n    const jogadoresFiltrados = jogadores\n        .filter((jogador) => jogador.startsWith(searchTerm))\n    \n\n    // function filtrar() {\n    //     try {\n\n    //         jogadores.filter((jogador) => {\n    //             if (searchTerm.length == 0) {\n    //                 return jogadores\n\n    //             } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n    //                 setJogadoresFiltrados(oldArray => ([...oldArray, jogador]));\n    //                 // setJogadoresFiltrados(JSON.parse(jogador))\n    //                 console.log(jogadoresFiltrados);\n\n    //                 // if (jogadoresFiltrados.length > 0) {\n    //                 //     setJogadores([])\n    //                 //     setJogadores(jogadoresFiltrados)\n    //                 //     console.log(\"jdf\", jogadores)\n    //                 // }\n\n    //             }\n    //         })\n\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n\n    // }\n\n    useEffect(() => {\n        // filtrar();\n    }, [searchTerm])\n\n\n    return (\n        <SearchBarStyle>\n            <div className=\"search\">\n                {isModalVisible ? <Modal onClose={() => setIsModalVisible(false)} children={<h1>teste</h1>} /> : null}\n\n                <input type=\"text\" \n                value={searchTerm}\n                placeholder=\"Pesquisar Jogador\" \n                onChange={(e) => { setSearchTerm(e.target.value) }} \n                />\n\n                <AddCircleIcon onClick={() => setIsModalVisible(true)} />\n            </div>\n        </SearchBarStyle>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}