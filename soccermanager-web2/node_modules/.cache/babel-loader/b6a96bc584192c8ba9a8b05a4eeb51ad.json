{"ast":null,"code":"var _jsxFileName = \"/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const {\n    jogadores,\n    setJogadores\n  } = useContext(Context);\n  const [oldJogadores, setOldJogares] = useState({\n    jogadores\n  });\n  const [jogadoresFiltrados, setJogadoresFiltrados] = useState([]);\n  const [achou, setAchou] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  console.log(oldJogadores);\n\n  function filtrar() {\n    try {\n      jogadores.filter(jogador => {\n        if (searchTerm.length === 0) {\n          return jogadores;\n        } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n          // setJogadoresFiltrados(oldArray => ([...oldArray, jogador]));\n          setJogadoresFiltrados(jogador);\n          console.log(jogadoresFiltrados);\n\n          if (jogadoresFiltrados.length > 0) {\n            setJogadores([]);\n            console.log(\"achou\");\n            setAchou(true);\n\n            if (achou) {\n              setJogadores(jogador);\n              console.log(\"achou msm\");\n            }\n          }\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    filtrar();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(SearchBarStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [isModalVisible ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalVisible(false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        placeholder: \"Pesquisar Jogador\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        onClick: () => setIsModalVisible(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"ah+0aFzeFHZySVJ+UY/OMfGW+Ng=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx"],"names":["React","useContext","useEffect","useState","SearchBarStyle","AddCircleIcon","Modal","Context","SearchBar","jogadores","setJogadores","oldJogadores","setOldJogares","jogadoresFiltrados","setJogadoresFiltrados","achou","setAchou","searchTerm","setSearchTerm","isModalVisible","setIsModalVisible","console","log","filtrar","filter","jogador","length","nomeJogador","toLowerCase","includes","toLocaleLowerCase","err","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport Jogador from \"../../Interfaces/jogadorInterface\";\n\n\nfunction SearchBar() {\n    const { jogadores, setJogadores } = useContext(Context);\n    const [oldJogadores, setOldJogares] = useState({jogadores})\n    const [jogadoresFiltrados, setJogadoresFiltrados] = useState<Jogador[]>([]);\n    const [achou, setAchou] = useState<boolean>(false);\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\nconsole.log(oldJogadores)\n\n    function filtrar() {\n        try {\n\n            jogadores.filter((jogador) => {\n                if (searchTerm.length === 0) {\n                    return jogadores\n\n                } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n                    // setJogadoresFiltrados(oldArray => ([...oldArray, jogador]));\n                    setJogadoresFiltrados(jogador)\n                    console.log(jogadoresFiltrados);\n\n                    if (jogadoresFiltrados.length > 0) {\n                        setJogadores([])\n                        console.log(\"achou\")\n                        setAchou(true)\n\n                        if(achou){\n                            setJogadores(jogador)\n                            console.log(\"achou msm\")\n                        }\n                    }\n\n                }\n            })\n\n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n\n    useEffect(() => {\n        filtrar();\n    }, [searchTerm])\n\n\n    return (\n        <SearchBarStyle>\n            <div className=\"search\">\n                {isModalVisible ? <Modal onClose={() => setIsModalVisible(false)} children={<h1>teste</h1>} /> : null}\n\n                <input type=\"text\"\n                    value={searchTerm}\n                    placeholder=\"Pesquisar Jogador\"\n                    onChange={(e) => { setSearchTerm(e.target.value) }}\n                />\n\n                <AddCircleIcon onClick={() => setIsModalVisible(true)} />\n            </div>\n        </SearchBarStyle>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}