{"ast":null,"code":"var _jsxFileName = \"/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSearchBar.addEventListener('onKeyUp');\n\nfunction SearchBar() {\n  _s();\n\n  const searChBar = document.getElementById('searchBar');\n  const {\n    jogadores,\n    setJogadores\n  } = useContext(Context);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  function filtrar() {\n    try {\n      jogadores.filter(jogador => {\n        if (searchTerm == \"\") {\n          return jogadores;\n        } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n          setJogadores(JSON.parse(jogador.toString()));\n          return jogador;\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    filtrar();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(SearchBarStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [isModalVisible ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalVisible(false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Pesquisar Jogador\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        onClick: () => setIsModalVisible(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"NFgBVZLnNdPPEdCkazWKA081saE=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx"],"names":["React","useContext","useEffect","useState","SearchBarStyle","AddCircleIcon","Modal","Context","SearchBar","addEventListener","searChBar","document","getElementById","jogadores","setJogadores","searchTerm","setSearchTerm","isModalVisible","setIsModalVisible","filtrar","filter","jogador","nomeJogador","toLowerCase","includes","toLocaleLowerCase","JSON","parse","toString","err","console","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEAC,SAAS,CAACC,gBAAV,CAA2B,SAA3B;;AAEA,SAASD,SAAT,GAAqB;AAAA;;AAEjB,QAAME,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;AAEA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8Bb,UAAU,CAACM,OAAD,CAA9C;AAEA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAU,KAAV,CAApD;;AAIA,WAASgB,OAAT,GAAmB;AACf,QAAI;AAEAN,MAAAA,SAAS,CAACO,MAAV,CAAkBC,OAAD,IAAa;AAC1B,YAAIN,UAAU,IAAI,EAAlB,EAAsB;AAClB,iBAAOF,SAAP;AAEH,SAHD,MAGO,IAAIQ,OAAO,CAACC,WAAR,CAAoBC,WAApB,GAAkCC,QAAlC,CAA2CT,UAAU,CAACU,iBAAX,EAA3C,CAAJ,EAAgF;AACnFX,UAAAA,YAAY,CAACY,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACO,QAAR,EAAX,CAAD,CAAZ;AACA,iBAAOP,OAAP;AACH;AACJ,OARD;AAUH,KAZD,CAYE,OAAOQ,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ;;AAED3B,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACJ,UAAD,CAFM,CAAT;AAKA,sBAEI,QAAC,cAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACKE,cAAc,gBAAG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAAvC;AAAgD,QAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkF,IADrG,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AAAmD,QAAA,QAAQ,EAAGc,CAAD,IAAO;AAAEhB,UAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA+B;AAArG;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAMhB,iBAAiB,CAAC,IAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH;;GA9CQV,S;;KAAAA,S;AAgDT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\n\nSearchBar.addEventListener('onKeyUp')\n\nfunction SearchBar() {\n\n    const searChBar = document.getElementById('searchBar');\n\n    const { jogadores, setJogadores } = useContext(Context);\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n\n\n\n    function filtrar() {\n        try {\n\n            jogadores.filter((jogador) => {\n                if (searchTerm == \"\") {\n                    return jogadores\n\n                } else if (jogador.nomeJogador.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\n                    setJogadores(JSON.parse(jogador.toString()))\n                    return jogador\n                }\n            })\n\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    useEffect(() => {\n        filtrar();\n    }, [searchTerm])\n\n\n    return (\n\n        <SearchBarStyle>\n            <div className=\"search\">\n                {isModalVisible ? <Modal onClose={() => setIsModalVisible(false)} children={<h1>teste</h1>} /> : null}\n\n                <input type=\"text\" placeholder=\"Pesquisar Jogador\" onChange={(e) => { setSearchTerm(e.target.value) }} />\n                <AddCircleIcon onClick={() => setIsModalVisible(true)} />\n            </div>\n        </SearchBarStyle>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}