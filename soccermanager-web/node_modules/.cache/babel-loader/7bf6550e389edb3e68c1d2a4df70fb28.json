{"ast":null,"code":"var _jsxFileName = \"/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar() {\n  _s();\n\n  const {\n    jogadores,\n    setJogadores\n  } = useContext(Context);\n  const [jogadoresFiltrados, setJogadoresFiltrados] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  console.log('as', jogadores);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  function filtrar() {\n    try {\n      if (jogadores && searchTerm.length > 0) {\n        const jogador = jogadores.map(jogador => jogador).filter(item => item.nomeJogador.toLowerCase().includes(searchTerm.toLowerCase()));\n        setJogadoresFiltrados(jogador);\n\n        if (jogadoresFiltrados.length > 0) {\n          setJogadores(jogadoresFiltrados);\n        }\n      } else {\n        return setJogadores({});\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  useEffect(() => {\n    filtrar();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(SearchBarStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [isModalVisible ? /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: () => setIsModalVisible(false),\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"teste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        placeholder: \"Pesquisar Jogador\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        onClick: () => setIsModalVisible(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchBar, \"iI6gBTA3nrJifVPatNcdBkJbEVQ=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/christian.almeida@VALEMOBI.CORP/Documentos/SoccerManager/soccermanager-web2/src/Components/ SearchBar/index.tsx"],"names":["React","useContext","useEffect","useState","SearchBarStyle","AddCircleIcon","Modal","Context","SearchBar","jogadores","setJogadores","jogadoresFiltrados","setJogadoresFiltrados","searchTerm","setSearchTerm","console","log","isModalVisible","setIsModalVisible","filtrar","length","jogador","map","filter","item","nomeJogador","toLowerCase","includes","err","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BT,UAAU,CAACM,OAAD,CAA9C;AAEA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAY,EAAZ,CAA5D;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBP,SAAjB;AAEA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAU,KAAV,CAApD;;AAEA,WAASgB,OAAT,GAAmB;AACf,QAAI;AAEI,UAAIV,SAAS,IAAII,UAAU,CAACO,MAAX,GAAoB,CAArC,EAAwC;AACpC,cAAMC,OAAO,GAAGZ,SAAS,CAACa,GAAV,CAAcD,OAAO,IAAIA,OAAzB,EAAkCE,MAAlC,CAAyCC,IAAI,IAAIA,IAAI,CAACC,WAAL,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCd,UAAU,CAACa,WAAX,EAAxC,CAAjD,CAAhB;AACAd,QAAAA,qBAAqB,CAACS,OAAD,CAArB;;AAEA,YAAIV,kBAAkB,CAACS,MAAnB,GAA4B,CAAhC,EAAmC;AAC/BV,UAAAA,YAAY,CAACC,kBAAD,CAAZ;AACH;AAEL,OARA,MAQO;AACL,eAAOD,YAAY,CAAC,EAAD,CAAnB;AAED;AAER,KAfD,CAeE,OAAOkB,GAAP,EAAY;AACVb,MAAAA,OAAO,CAACc,KAAR,CAAcD,GAAd;AACH;AAEJ;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACN,UAAD,CAFM,CAAT;AAKA,sBACI,QAAC,cAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACKI,cAAc,gBAAG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAAvC;AAAgD,QAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cAAH,GAAkF,IADrG,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,KAAK,EAAEL,UADX;AAEI,QAAA,WAAW,EAAC,mBAFhB;AAGI,QAAA,QAAQ,EAAGiB,CAAD,IAAO;AAAEhB,UAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA+B;AAHtD;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAE,MAAMd,iBAAiB,CAAC,IAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApDQV,S;;KAAAA,S;AAsDT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { SearchBarStyle } from './styles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Modal from \"../ModalCadastroJogador.tsx\";\nimport Context from \"../../Context/context\";\nimport Jogador from \"../../Interfaces/jogadorInterface\";\n\n\nfunction SearchBar() {\n    const { jogadores, setJogadores } = useContext(Context);\n\n    const [jogadoresFiltrados, setJogadoresFiltrados] = useState<Jogador[]>([])\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    console.log('as',jogadores)\n\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n\n    function filtrar() {\n        try {\n            \n                if (jogadores && searchTerm.length > 0) {\n                    const jogador = jogadores.map(jogador => jogador).filter(item => item.nomeJogador.toLowerCase().includes(searchTerm.toLowerCase()))\n                    setJogadoresFiltrados(jogador)\n\n                    if (jogadoresFiltrados.length > 0) {\n                        setJogadores(jogadoresFiltrados)\n                    }\n\n               } else  {\n                  return setJogadores({})\n\n                }\n\n        } catch (err) {\n            console.error(err);\n        }\n\n    }\n\n    useEffect(() => {\n        filtrar();\n    }, [searchTerm])\n\n\n    return (\n        <SearchBarStyle>\n            <div className=\"search\">\n                {isModalVisible ? <Modal onClose={() => setIsModalVisible(false)} children={<h1>teste</h1>} /> : null}\n\n                <input type=\"text\"\n                    value={searchTerm}\n                    placeholder=\"Pesquisar Jogador\"\n                    onChange={(e) => { setSearchTerm(e.target.value) }}\n                />\n\n                <AddCircleIcon onClick={() => setIsModalVisible(true)} />\n            </div>\n        </SearchBarStyle>\n    );\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}